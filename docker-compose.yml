services:
  database:
    container_name: db
    image: postgres:17
    restart: always
    user: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - LC_ALL=C.UTF-8
      - POSTGRES_PASSWORD=Digitalsegurogml2024!
      - POSTGRES_USER=postgres
      - POSTGRES_DB=db
    ports:
      - 5433:5432
    networks:
      - postgres

  # Serviço do PgAdmin
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: unless-stopped
    volumes:
      - pgadmin:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - 5050:80
    networks:
      - postgres

  # Serviço do backend (NestJS)
  backend:
    container_name: nestjs-backend
    build:
      context: .
    working_dir: /app # Diretório onde o aplicativo NestJS vai rodar
    volumes:
      - .:/app # Mapeia o diretório local para o container
    ports:
      - 3000:3000 # Expondo a porta do backend
    environment:
      - DATABASE_HOST=database # Nome do serviço de banco de dados no Docker Compose
      - DATABASE_PORT=5433
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=Digitalsegurogml2024!
      - DATABASE_NAME=db
    depends_on:
      - database # Garante que o banco de dados seja iniciado antes do backend
    networks:
      - postgres

volumes:
  pgdata:
  pgadmin:

networks:
  postgres:
